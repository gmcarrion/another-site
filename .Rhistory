geom_line(size= 1)
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_grey()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_minimal()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_light()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_linedraw()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_replace()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_set()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1) +
theme_void()
ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1 + ggtitle(ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1))
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1))
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1 + ggtitle(ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
df <- df %>% dplyr::select(-X, -X.1, X.2)
plot1 + ggtitle("" + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1
plot1 + ggtitle("" + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1
plot1
library(ggplot2)
plot1 + ggtitle("" + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1 + ggtitle(("") + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1 + ggtitle(title("") + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
plot1
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
df <- read.csv("Figure2.csv")
head(df)
install.packages("dplyr")
library(dplyr)
library(ggplot2)
df <- df %>% dplyr::select(-X, -X.1, X.2)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
install.packages("dplyr")
df <- read.csv("Figure2.csv")
head(df)
library(dplyr)
library(ggplot2)
df <- df %>% dplyr::select(-X, -X.1, X.2)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
df <- read.csv("Figure2.csv")
head(df)
library(dplyr)
library(ggplot2)
df <- df %>% dplyr::select(-X, -X.1, X.2)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
df <- read.csv("Figure2.csv")
head(df)
library(dplyr)
library(ggplot2)
df <- df %>% dplyr::select(-X, -X.1, X.2)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
df <- read.csv("Figure2.csv")
head(df)
library(dplyr)
library(ggplot2)
df <- df %>% dplyr::select(-X, -X.1, X.2)
plot1 <- ggplot(data = df, aes(x = hpf, y = numviable, color = treatment)) +
geom_point(size = 4) +
geom_line(size= 1)
plot1
plot1 + ylab("Number of Viable Embryos") + xlab("Hours Post Fertilization (hpf)")
install.packages("vitae")
install.packages("vitae")
install.packages("vitae")
install.packages("vitae")
install.packages("vitae")
library(vitae)
library(vitae)
install.packages("vitae")
install.packages("vitae")
library(vitae)
blogdown::serve_site()
blogdown::serve_site()
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(ISwR)
data("secher")
library(HH)
data("birthweight")
birthweight
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
blogdown::serve_site()
library(tidyverse)
install.packages(tidyverse)
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse", dependencies = TRUE )
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
install.packages("devtools")
devtools::install_github("hadley/tidyverse")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("Rtools")
install.packages("rtools")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("Rtools")
install.packages("Rtools34")
library(dplyr)
library(dplyr)
sech1 <- secher %>% dplyr::select(birthwt = bwt, bpd, ad, no)
head(sech1)
library(tidyverse)
library(rlang)
install.packages("rlang")
library(rlang)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(ISwR)
data("secher")
library(HH)
data("birthweight")
birthweight
library(dplyr)
library(tidyverse)
sech1 <- secher %>% dplyr::select(birthwt = bwt, bpd, ad, no)
head(sech1)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
#install.packages("DAAG")
library(DAAG)
data("mifem")
mifem
library(tidyverse)
library(dplyr)
library(ggplot2)
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE),]
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
coef(fit_b)
})
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE)]
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE)]
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
coef(fit_b)
})
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE),]
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE),]
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
coef(fit_b)
})
samp_distn%>%t%>%as.data.frame%>%summarize_all(sd)
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE),]
boot_dat<-data[sample(nrow(data),replace=TRUE),]
boot_dat<-boot_dat<-data(sample(nrow(data),replace=TRUE),)
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-data(sample(nrow(data),replace=TRUE),)
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
coef(fit_b)
})
boot_dat<-boot_dat<-data(sample(nrow(data),replace=TRUE),)
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
boot_dat<-data(sample(nrow(data),replace=TRUE),)
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
fit_b <- lm(age_c ~ premi * diabetes, data="boot_dat")
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
df$age_c <- df$age - mean(df$age)
df$age_c <- df$age - mean(df$age)
mean(df$age) #60.68255
# Linear modeling
# code that relevels to make things make sense
# now "d" is 1 and "n" is 0
data <- data %>%
mutate(premi = relevel(premi, ref = "n"), diabetes = relevel(diabetes, ref = "n"))
head(data)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
#install.packages("DAAG")
library(DAAG)
data("mifem")
mifem
library(tidyverse)
library(dplyr)
library(ggplot2)
class_diag<-function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
mifem %>% group_by(outcome) %>% summarize(count = n())
df <- mifem %>% subset(premi!="nk") %>% subset(smstat!="nk") %>% subset(diabetes!= "nk") %>% subset(highbp!="nk") %>% subset(hichol!="nk") %>% subset(angina!="nk") %>% subset(stroke!="nk")
df %>% group_by(premi)%>% summarize(count = n())
df %>% group_by(smstat)%>% summarize(count = n())
df %>% group_by(diabetes)%>% summarize(count = n())
df %>% group_by(highbp)%>% summarize(count = n())
df %>% group_by(hichol)%>% summarize(count = n())
df %>% group_by(angina)%>% summarize(count = n())
df %>% group_by(stroke)%>% summarize(count = n())
d1 <- subset(mifem, premi!="nk")
d2 <- subset(d1, smstat!= "nk")
d3 <- subset(d2, diabetes!= "nk")
d4 <- d3 %>% mutate(premi=recode(premi,
`y`= "d"))
d5 <- d4 %>% mutate(diabetes=recode(diabetes,
`y`= "d"))
data <- d5 %>% mutate(outcome=recode(outcome,
`dead`= 0,
`live` = 1))%>%na.omit()
head(data)
man1<-manova(cbind(age,yronset)~smstat, data=df)
summary(man1)
summary.aov(man1)
df%>%group_by(smstat)%>%summarize(mean(age),mean(yronset))
pairwise.t.test(df$age,df$smstat, p.adj="none")
pairwise.t.test(df$yronset,df$smstat, p.adj="none")
# Probability of at least one Type 1 error
1-(1-0.05)^9
# 0.3697506
# 36.97506% chance of a Type I error
# Adjusted significance level
0.05/9
# 0.0056 is the adjusted significance level
# Randomization PERMANOVA
library(vegan)
dists<-df %>% dplyr::select(age, yronset) %>% dist()
adonis(dists~smstat,data=df)
SST <- sum(dists^2)/150
SSW <-df %>% group_by(smstat)%>% dplyr::select(age,yronset) %>%
do(d=dist(.[2:3],"euclidean"))%>%ungroup()%>%
summarize(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%>%pull
F_obs<-((SST-SSW)/2)/(SSW/147)
Fs<-replicate(1000,{
new<-df%>%mutate(smstat=sample(smstat))
SSW<-new%>%group_by(smstat)%>%dplyr::select(age,yronset)%>%
do(d=dist(.[2:3],"euclidean"))%>%ungroup()%>%
summarize(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%>%pull
((SST-SSW)/2)/(SSW/147)
})
{hist(Fs,prob = T); abline(v=F_obs, col="red", lwd=3)}
mean(Fs>F_obs)
# Linear modeling
# code that relevels to make things make sense
# now "d" is 1 and "n" is 0
data <- data %>%
mutate(premi = relevel(premi, ref = "n"), diabetes = relevel(diabetes, ref = "n"))
head(data)
# mean center numeric variables
# mean center age
df$age_c <- df$age - mean(df$age)
mean(df$age) #60.68255
fit <- lm(age_c ~ premi * diabetes, data=df)
summary(fit)
ggplot(df, aes(y=age, x=premi,group=diabetes))+
geom_point(aes(color=diabetes))+
geom_smooth(method="lm",se=F,fullrange=T,aes(color=diabetes))+
theme(legend.position=c(.9,.19))+xlab("premi")
# homoskedacity
library(sandwich)
library(lmtest)
resids<-fit$residuals
fitvals<-fit$fitted.values
bptest(fit)
ggplot()+geom_histogram(aes(resids),bins=20)
# This shows that the data is not normal because it is skewed to the left.
ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
# This graph shows that the data in not lineat because the data points do not follow the linear pattern of the
# red residual line
# The BP test rejected the null hypothesis and heteroskedacity is assumed by the model.
coeftest(fit, vcov = vcovHC(fit))
# I reran the regression using heteroskedasticity robust standard errors which, although the p-values were raised, the
# model still rejected the null hypothesis and showed that heteroskedasticity was assumed, except for the
# interaction between premi and diabetes in which the p-value was raised enough that the model failed to reject the
# null hypothesis was rejected and showed that heteroskedasticty does not exist in the interaction of the variables.
# The R squared value of the linear regression was 0.01673.  About 1.673% of the variation in age is explained by the model.
samp_distn<-replicate(5000, {
boot_dat<-boot_dat<-data[sample(nrow(data),replace=TRUE)]
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
coef(fit_b)
})
boot_dat<-data[sample(nrow(data),replace=TRUE)]
boot_dat<-data(sample(nrow(data),replace=TRUE))
fit_b <- lm(age_c ~ premi * diabetes, data=boot_dat)
# LOGISTIC REGRESSION
fitlogreg1<-glm(outcome~ age + premi, data=data, family="binomial")
summary(fitlogreg1)
exp(coef(fitlogreg1))%>%round(3)
table(data$outcome,data$premi) %>% addmargins
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(tidyverse)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
df <- read.delim("BRAINBYSITE.txt", sep="|")
knitr::opts_chunk$set(echo = TRUE)
library(ISwR)
data("secher")
library(HH)
data("birthweight")
birthweight
library(dplyr)
library(tidyverse)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
---
site: blogdown:::blogdown_site
---
install.packages("blogdown")
blogdown::install_hugo()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown::new_site(theme = "nurlansu/hugo-sustain")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(boot)
data("melanoma")
MM1 <- melanoma
MM <- MM1 %>% mutate(sex = recode(sex, `0` = "female", `1` = "male")) %>%
mutate(status = recode(status, `1` = "Melanoma Death", `2` = "Alive", `3` = "Unrelated Death")) %>%
mutate(ulcer = recode(ulcer, `0` = "absent", `1` = "present"))
library(dplyr)
library(tidyverse)
MM <- MM1 %>% mutate(sex = recode(sex, `0` = "female", `1` = "male")) %>%
mutate(status = recode(status, `1` = "Melanoma Death", `2` = "Alive", `3` = "Unrelated Death")) %>%
mutate(ulcer = recode(ulcer, `0` = "absent", `1` = "present"))
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(boot)
data("melanoma")
MM1 <- melanoma
MM <- MM1 %>% mutate(sex = recode(sex, `0` = "female", `1` = "male")) %>%
mutate(status = recode(status, `1` = "Melanoma Death", `2` = "Alive", `3` = "Unrelated Death")) %>%
mutate(ulcer = recode(ulcer, `0` = "absent", `1` = "present"))
head(MM %>% filter(sex == "male"))
head(MM %>% filter(sex == "female" & age > 50))
head(MM %>% arrange(desc(thickness)))
head(MM %>% arrange(age))
head(MM %>% arrange(sex, time))
head(MM %>% dplyr::select(X, time, status, sex))
View(MM)
head(MM %>% dplyr::select(time, status, sex))
head(MM %>% dplyr::select(-age, - year, -thickness, -ulcer))
head(MM %>% group_by(sex) %>% summarize(mean_time = mean(time, na.rm = T), sd_time = sd(time, na.rm=T)))
head(MM %>% group_by(status) %>% summarize(mean_age = mean(age, na.rm = T), sd_age = sd(age, na.rm = T)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(boot)
data("melanoma")
MM1 <- melanoma
MM <- MM1 %>% mutate(sex = recode(sex, `0` = "female", `1` = "male")) %>%
mutate(status = recode(status, `1` = "Melanoma Death", `2` = "Alive", `3` = "Unrelated Death")) %>%
mutate(ulcer = recode(ulcer, `0` = "absent", `1` = "present"))
head(MM %>% group_by(sex) %>% summarize(mean_time = mean(time, na.rm = T), sd_time = sd(time, na.rm=T)))
head(MM %>% group_by(status) %>% summarize(mean_age = mean(age, na.rm = T), sd_age = sd(age, na.rm = T)))
plot1 <- ggplot(MM, aes(age,thickness, color = sex))+geom_point(size = 3)
plot1 + ggtitle("Age and Tumor Thickness by Sex") + ylab("Tumor Thickness (mm)") + xlab("Age")
ggplot(MM, aes(status, fill = sex))+
geom_bar(position = "dodge") +
facet_wrap(~MM$year) +
ggtitle("Patient Status by Sex and Year") + xlab("Patient Status") +
theme(axis.text.x = element_text(angle=45, hjust=1))
MM %>% summarize(mean_time = mean(time),mean_age = mean(age), mean_thick = mean(thickness))
MM %>% summarize(sd_time = sd(time), sd_age = sd(age), sd_thick = sd(thickness))
MM %>% summarize(var_time = var(time),var_age = var(age), var_thick = var(thickness))
MM %>% summarize(min_time = min(time), min_age = min(age), min_thick = min(thickness), min_year = min(year))
MM %>% summarize(max_time = max(time), max_age = max(age), max_thick = max(thickness), max_year = max(year))
MM %>% summarize(n_distinct(X))
MM %>% summarize(n_distinct(time))
MM %>% summarize(n_distinct(status))
MM %>% summarize(n_distinct(sex))
MM %>% summarize(n_distinct(age))
MM %>% summarize(n_distinct(year))
MM %>% summarize(n_distinct(thickness))
MM %>% summarize(n_distinct(ulcer))
MM %>% summarize(cor(age, time))
MM %>% summarize(cor(age, thickness))
MM %>% summarize(cor(time, thickness))
MM%>%select_if(is.numeric)%>%cov()
MM%>%select_if(is.numeric)%>% cor()%>%round(2)
eig1<-MM%>%select(time, age, thickness)%>%cor%>%eigen()
eig1
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(boot)
data("melanoma")
MM1 <- melanoma
MM <- MM1 %>% mutate(sex = recode(sex, `0` = "female", `1` = "male")) %>%
mutate(status = recode(status, `1` = "Melanoma Death", `2` = "Alive", `3` = "Unrelated Death")) %>%
mutate(ulcer = recode(ulcer, `0` = "absent", `1` = "present"))
head(MM)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
