install.packages("blogdown")
blogdown::install_hugo()
blogdown::new_site(theme = "nurlansu/hugo-sustain")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
#### Projects
Here are some projects I have been working on:
- [Project 1](/Project1/)
- [Project 2](/Project2/) Projects
#### Projects
Here are some projects I have been working on:
- [Project 1](/Project1/)
- [Project 2](/Project2/)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
#install.packages("DAAG")
library(DAAG)
data("mifem")
mifem
library(dplyr)
library(ggplot2)
# Randomization PERMANOVA
library(vegan)
dists<-data%>%dplyr::select(age, yronset)%>%dist()
dists<-data%>%dplyr::select(age, yronset)%>%dist()
dists<-data%>% dplyr::select(age, yronset)%>%dist()
library(dplyr)
library(tidyverse)
# Randomization PERMANOVA
library(vegan)
dists<-data%>% dplyr::select(age, yronset)%>%dist()
dists<-data%>% select(age, yronset)%>%dist()
dists<-data%>% dplyr::select(age, yronset)%>%dist()
dists<-data %>% dplyr::select(age, yronset)%>%dist()
adonis(dists~smstat,data=data)
dists<-data %>% dplyr::select(age, yronset)%>%dist()
SST <- sum(dists^2)/150
SSW <-data %>% group_by(smstat)%>% dplyr::select(age,yronset) %>%
do(d=dist(.[2:3],"euclidean"))%>%ungroup()%>%
summarize(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%>%pull
dists<-data %>% dplyr::select(age, yronset)%>%dist()
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyverse)
class_diag<-function(probs,truth){
tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
acc=sum(diag(tab))/sum(tab)
sens=tab[2,2]/colSums(tab)[2]
spec=tab[1,1]/colSums(tab)[1]
ppv=tab[2,2]/rowSums(tab)[2]
if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
#CALCULATE EXACT AUC
ord<-order(probs, decreasing=TRUE)
probs <- probs[ord]; truth <- truth[ord]
TPR=cumsum(truth)/max(1,sum(truth))
FPR=cumsum(!truth)/max(1,sum(!truth))
dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
n <- length(TPR)
auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
data.frame(acc,sens,spec,ppv,auc)
}
mifem %>% group_by(outcome) %>% summarize(count = n())
d1 <- subset(mifem, premi!="nk")
d2 <- subset(d1, smstat!= "nk")
d3 <- subset(d2, diabetes!= "nk")
d4 <- d3 %>% mutate(premi=recode(premi,
`y`= "d"))
d5 <- d4 %>% mutate(diabetes=recode(diabetes,
`y`= "d"))
data <- d5 %>% mutate(outcome=recode(outcome,
`dead`= 0,
`live` = 1))%>%na.omit()
head(data)
man1<-manova(cbind(age,yronset)~smstat, data=data)
summary(man1)
summary.aov(man1)
data%>%group_by(smstat)%>%summarize(mean(age),mean(yronset))
pairwise.t.test(data$age,data$smstat, p.adj="none")
pairwise.t.test(data$yronset,data$smstat, p.adj="none")
# Probability of at least one Type 1 error
1-(1-0.05)^9
# 0.3697506
# 36.97506% chance of a Type I error
# Adjusted significance level
0.05/9
# 0.0056 is the adjusted significance level
# Randomization PERMANOVA
library(vegan)
dists<-data %>% dplyr::select(age, yronset) %>% dist()
adonis(dists~smstat,data=data)
# Randomization PERMANOVA
library(vegan)
dists<-data %>% dplyr::select(age, yronset) %>% dist()
adonis(dists~smstat,data=data)
SST <- sum(dists^2)/150
SSW <-data %>% group_by(smstat)%>% dplyr::select(age,yronset) %>%
do(d=dist(.[2:3],"euclidean"))%>%ungroup()%>%
summarize(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%>%pull
F_obs<-((SST-SSW)/2)/(SSW/147)
Fs<-replicate(1000,{
new<-data%>%mutate(smstat=sample(smstat))
SSW<-new%>%group_by(smstat)%>%dplyr::select(age,yronset)%>%
do(d=dist(.[2:3],"euclidean"))%>%ungroup()%>%
summarize(sum(d[[1]]^2)/50 + sum(d[[2]]^2)/50+ sum(d[[3]]^2)/50)%>%pull
((SST-SSW)/2)/(SSW/147)
})
{hist(Fs,prob = T); abline(v=F_obs, col="red", lwd=3)}
mean(Fs>F_obs)
install.packages("plotROC")
library(plotROC)
# Repeated random sampling
set.seed(1234)
fraction<-0.5 #choose proportion of rows to train
train_n<-floor(fraction*nrow(datalogreg)) #number of rows to train
datalogreg$logit<-predict(fitlogreg1,type="link")
# LOGISTIC REGRESSION
fitlogreg1<-glm(outcome~ age + premi, data=data, family="binomial")
summary(fitlogreg1)
exp(coef(fitlogreg1))%>%round(3)
table(data$outcome,data$premi) %>% addmargins
datalogreg <- data
datalogreg$prob1 <- predict(fitlogreg1, newdata=datalogreg,type = "response")
table(predict = as.numeric(datalogreg$prob1 > 0.1), truth = datalogreg$outcome) %>%
addmargins
# despite lowering the cutoff rate by quite a bit, this data did not predict any negatives.
mifem %>% group_by(outcome) %>% summarize(count = n())
# this may have to do with there being significanlty more data entries in which the outcome was that the patient survived (974)
# than the patient dying (321).
# accuracy
(935)/1163
# 0.8039553
# sensitivity TPR
(935)/935
# 1
# Specificity TNR
(0/228)
# 0
# PPV
(935/1163)
# 0.8039553
#FPR
(228/1163)
# 0
datalogreg$logit<-predict(fitlogreg1,type="link")
datalogreg%>%ggplot()+geom_density(aes(logit,color=outcome,fill=outcome), alpha=.4)+
theme(legend.position=c(.85,.85))+geom_vline(xintercept=0)+xlab("predictor (logit)")
#install.packages("plotROC")
library(plotROC)
probb <- predict(fitlogreg1, type = "response", family = "binomial")
ROCplot1 <- datalogreg %>% ggplot() + geom_roc(aes(d = outcome, m = probb),
n.cuts = 0) + geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1),
lty = 2)
ROCplot1
class_diag(probb, datalogreg$outcome)
# Repeated random sampling
set.seed(1234)
fraction<-0.5 #choose proportion of rows to train
train_n<-floor(fraction*nrow(datalogreg)) #number of rows to train
iter<-500 #number of iterations
diags<-NULL
for(i in 1:iter){
## Create training and test sets
train_index<-sample(1:nrow(datalogreg),size=train_n)
train<-datalogreg[train_index,]
test<-datalogreg[-train_index,]
truth<-test$outcome
## Train model on training set
fitrrs<-glm(outcome~age + premi ,data=train,family="binomial")
probsrrs<-predict(fitrrs,newdata = test,type="response")
## Test model on test set (save results)
diags<-rbind(diags,class_diag(probsrrs,truth))
}
apply(diags,2,mean) #average across all k results
# LASSO
install.packages("glmnet")
library(glmnet)
fit1d <- glm(outcome ~ -1 + age + yronset + premi + smstat +
diabetes + highbp + hichol + angina + stroke, data = data,
family = "binomial")
data$prob1d <- predict(fit1d, data = "response")
x1 <- model.matrix(fit1d)
x1 <- scale(x1)
y1 <- as.matrix(data$outcome)
cv1 <- cv.glmnet(x1, y1, family = "binomial")
lasso1 <- glmnet(x1, y1, family = "binomial", lambda = cv1$lambda.1se)
coef(cv1)
k = 10
datasig <- data %>% dplyr::select(-premi, -smstat, -highbp, -diabetes)
fit1e <- glm(outcome ~ -1 + age + yronset + angina + stroke, data = datasig, family = "binomial")
datasig$prob1e <- predict(fit1e, data = "response")
x2 <- model.matrix(fit1e)
x2 <- scale(x2)
y2 <- as.matrix(datasig$outcome)
cv2 <- cv.glmnet(x2, y2, family = "binomial")
lasso2 <- glmnet(x2, y2, family = "binomial", lambda = cv2$lambda.1se)
coef(cv2)
k=10 #choose number of folds
data$anginan<-ifelse(data$angina=="n",1,0)
data1<-data[sample(nrow(data)),] #randomly order rows
folds<-cut(seq(1:nrow(data)),breaks=k,labels=F) #create folds
diags<-NULL
for(i in 1:k){
## Create training and test sets
trainl<-data1[folds!=i,]
testl<-data1[folds==i,]
truthl<-testl$outcome
## Train model on training set
fitl<-glm(outcome~age+anginan,data=trainl,family="binomial")
probsl<-predict(fitl,newdata = testl,type="response")
## Test model on test set (save all k results)
diags<-rbind(diags,class_diag(probsl,truthl))
}
diags%>%summarize_all(mean)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(ISwR)
data("secher")
library(HH)
data("birthweight")
birthweight
library(tidyverse)
### changed the name of a column so that it could be joined more easily
sech1 <- secher %>% dplyr::select(birthwt = bwt, bpd, ad, no)
head(sech1)
### tidy data example
pivgender <- pivot_wider(birthweight, names_from = "gender", values_from = "gender")
head(pivgender)
### gave an observation number to the birthweight data set to help visualize in the joined dataset
btwt <- birthweight %>% mutate(ID = row_number())
head(btwt)
### Join data sets
# For the data I picked, I wanted to keep all the variables so all the join functions seemed to work similarly, I picked full join
fulldata <- sech1 %>% full_join(y = btwt, by = "birthwt")
fdo <- fulldata %>% na.omit()
head(fdo)
### filter() function
fdo %>% filter(gender == "M")
# gave only observations from the male gender
fdo %>% filter(momsage == "22" & gender =="F")
### filter() function
head(fdo %>% filter(gender == "M"))
# gave only observations from the male gender
head(fdo %>% filter(momsage == "22" & gender =="F"))
### arrange() function
# put the dataframe in a certain order according to a variable
head(fdo %>% arrange(desc(birthwt), desc(term)))
head(fdo %>% arrange(desc(term), momsage))
### group_by() function
# according to birthweight, pulled the mean and standard deviation of the birthweights
head(fdo %>% group_by(birthwt) %>% summarize(mean_bwt = mean(birthwt, na.rm = T), sd_bwt = sd(birthwt, na.rm=T)))
### select() function
# chose only a few columns to look at a time
head(fdo %>% select(birthwt, momsage, ad))
### select() function
# chose only a few columns to look at a time
head(fdo %>% select(birthwt, momsage, ad))
### select() function
# chose only a few columns to look at a time
fdo %>% select(birthwt, momsage, ad)
### select() function
# chose only a few columns to look at a time
fdo %>% dplyr::select(birthwt, momsage, ad)
### select() function
# chose only a few columns to look at a time
head(fdo %>% dplyr::select(birthwt, momsage, ad))
### select() function
# chose only a few columns to look at a time
fdo %>% dplyr::select(birthwt, momsage, ad)
### select() function
# chose only a few columns to look at a time
head(fdo %>% dplyr::select(birthwt, momsage, ad))
### ggplots
fdo %>% group_by(birthwt, momsage) %>%
summarize(mean_bwt=mean(birthwt, na.rm=T),
sd_bwt=sd(birthwt, na.rm=T), n=n()) %>%
ggplot(aes(momsage,mean_bwt))+geom_bar(stat="identity")
## ggplots
# IN this plot you can see the birthweight ompared to the term broken down by the moms age when the child was born
ggplot(data = fdo, mapping = aes(x = fdo$birthwt, y = fdo$term))+
geom_point()+
ggtitle("Birthweight vs Term")+
xlab("Birthweight")+ ylab("Term")+
facet_wrap(~fdo$momsage)
# This plot shows that there is a general trend between the birthweight and head size of the babies
# There is not an apparent trend with the birthweight or head size and what term the babies were born in, some of the low weight babies were born earlier except for one outlier
ggplot(data = fdo, mapping = aes(x = fdo$birthwt, y = fdo$bpd, color = fdo$term))+
geom_point(stat = "summary", fun.y="mean")+
ggtitle("Birthweight vs BPD by Term")+
xlab("Birthweight")+ ylab("BPD")
### summary functions
# mean
fdo %>% summarize(mean_bwt = mean(birthwt),mean_bpd = mean(bpd), mean_ad = mean(ad),mean_momsage = mean(momsage), mean_term = mean(term))
# sd
fdo %>% summarize(sd_bwt = sd(birthwt))
fdo %>% summarize(sd_bwt = sd(birthwt), sd_bpd = sd(bpd), sd_ad = sd(ad), sd_momsage = sd(momsage), sd_term=sd(term))
# var
fdo %>% summarize(var_bwt = var(birthwt),var_bpd = var(bpd), var_ad = var(ad), var_momsage = var(momsage), var_term = var(term))
```{r, echo = FALSE}
### ggplots
fdo %>% group_by(birthwt, momsage) %>%
summarize(mean_bwt=mean(birthwt, na.rm=T),
sd_bwt=sd(birthwt, na.rm=T), n=n()) %>%
ggplot(aes(momsage,mean_bwt))+geom_bar(stat="identity")
## ggplots
# IN this plot you can see the birthweight ompared to the term broken down by the moms age when the child was born
ggplot(data = fdo, mapping = aes(x = fdo$birthwt, y = fdo$term))+
geom_point()+
ggtitle("Birthweight vs Term")+
xlab("Birthweight")+ ylab("Term")+
facet_wrap(~fdo$momsage)
# This plot shows that there is a general trend between the birthweight and head size of the babies
# There is not an apparent trend with the birthweight or head size and what term the babies were born in, some of the low weight babies were born earlier except for one outlier
ggplot(data = fdo, mapping = aes(x = fdo$birthwt, y = fdo$bpd, color = fdo$term))+
geom_point(stat = "summary", fun.y="mean")+
ggtitle("Birthweight vs BPD by Term")+
xlab("Birthweight")+ ylab("BPD")
blogdown::serve_site()
blogdown::serve_site()
install.packages('vitae')
install.packages("devtools")
install.packages("devtools")
devtools::install_github("mitchelloharawild/vitae")
install.packages("devtools")
devtools::install_github("mitchelloharawild/vitae")
knitr::opts_chunk$set(echo = TRUE)
install.packages('vitae')
install.packages("devtools")
devtools::install_github("mitchelloharawild/vitae")
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("scholar")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(reticulate)
install.packages(reticulate)
install.packages("reticulate")
library(reticulate)
hi<-"Hello"
data(pokemon)
library(tidyverse)
poke<-read.csv("https://gist.githubusercontent.com/armgilles/194bcff35001e7eb53a2a8b441e8b2c6/raw/92200bc0a673d5ce2110aaad4544ed6c4010f687/pokemon.csv",row.names = "Name")
poke<-poke%>%dplyr::select(-`X.`,-Total)
head(poke)
library(reticulate)
%load_ext rpy2.ipython
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
%load_ext rpy2.ipython
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
use_python(projectpython.ipynb)
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
import matplotlib.pyplot as plt
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
use_python("/usr/local/bin/python")
import matplotlib.pyplot as plt
knitr::opts_chunk$set(echo = TRUE)
install.packages("reticulate")
library(reticulate)
Sys.which("python")
use_python("/usr/local/bin/python")
install.packages("reticulate")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("reticulate")
library(reticulate)
Sys.which("python")
use_python("/usr/local/bin/python")
import matplotlib.pyplot as plt
knitr::knit_engines$set(python = reticulate::eng_python)
#install.packages("reticulate")
library(reticulate)
Sys.which("python")
use_python("/usr/local/bin/python")
import matplotlib.pyplot as plt
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
```{}
library(reticulate)
```
library(reticulate)
library(reticulate)
use_python("/Desktop")
import matplotlib.pyplot as plt
library(reticulate)
use_python("/Desktop")
blogdown::serve_site()
blogdown::serve_site()
library(reticulate)
use_python("/Desktop")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
library(reticulate)
use_python("/Desktop")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(reticulate)
use_python("/Desktop")
library(reticulate)
use_python("/Desktop")
library(reticulate)
use_python("/Desktop")
library(reticulate)
use_python("/Desktop")
library(reticulate)
use_python("/Desktop")
library(reticulate)
use_python("/Desktop/Anaconda332")
